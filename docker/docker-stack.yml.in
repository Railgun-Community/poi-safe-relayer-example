version: '3.9'

networks:
  relayer:

volumes:
  nwaku:
    name: 'nwaku'
  relayer:
    name: 'relayer'

services:
  nwaku:
    image: nwaku:latest
    hostname: 'nwaku'
    networks:
      - relayer
    ports:
      - 60000:60000 # p2p
      - 9000:9000 # ENR
      - 8000:8000 # wss
    volumes:
      - nwaku:/data
      - ./appdata/swag/etc/letsencrypt:/ssl
      - ../scripts/nwaku:/app/scripts
    depends_on:
      - swag
    healthcheck:
      test: curl --fail http://localhost:8546 || exit 1
      interval: 30s
      retries: 4
      start_period: 10s
      timeout: 5s
    entrypoint: >
      wakunode2
        --config-file=/app/config.toml
        --nat="extip:${EXTIP}"
        --listen-address="${LISTENIP}"
        --dns4-domain-name="${SUBDOMAIN}.${BASEDOMAIN}"
        --nodekey="${NODEKEY}"
        --websocket-support=true
        --websocket-secure-support=true
        --websocket-secure-key-path="/ssl/live/${SUBDOMAIN}.${BASEDOMAIN}/privkey.pem"
        --websocket-secure-cert-path="/ssl/live/${SUBDOMAIN}.${BASEDOMAIN}/fullchain.pem"

  relayer:
    image: relayer:latest
    hostname: 'relayer'
    networks:
      - relayer
    environment:
      WAKU_RPC_URL: 'http://nwaku:8546'
      LEPTON_DB: '/mnt/relayer.db'
      LOG_LEVEL: 'debug'
      DEBUG: 'relayer*,waku:jsonrpc-api,-relayer:warn,-relayer:log'
    secrets:
      - MNEMONIC
      - DB_ENCRYPTION_KEY
    depends_on:
      - nwaku
    volumes:
      - relayer:/mnt
    command: sh -c './scripts/wait-for nwaku:8546 -t 30 -- npm start'

  swag:
    image: ghcr.io/linuxserver/swag
    cap_add:
      - NET_ADMIN
    networks:
      - relayer
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=EST
      - URL=${BASEDOMAIN}
      - ONLY_SUBDOMAINS=true
      - SUBDOMAINS=${SUBDOMAIN}
      - VALIDATION=http
      - EMAIL=${EMAIL}
    volumes:
      - ./appdata/swag:/config
      - ./swag/nwaku.subdomain.conf:/config/nginx/proxy-confs/nwaku.subdomain.conf
    ports:
      - 443:443
      - 80:80 # must be available to obtain ssl cert from letsencrypt

  prometheus:
    image: prom/prometheus:v2.36.2
    user: '1000:1000'
    networks:
      - relayer
    volumes:
      - ./prometheus/:/etc/prometheus/
      - ./prometheus/data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'

  grafana:
    image: grafana/grafana
    user: '1000:1000'
    networks:
      - relayer
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - ./grafana/data:/var/lib/grafana
      - ./grafana/config:/etc/grafana/

secrets:
  MNEMONIC:
    external: true
  DB_ENCRYPTION_KEY:
    external: true
