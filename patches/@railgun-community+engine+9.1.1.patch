diff --git a/node_modules/@railgun-community/engine/dist/wallet/abstract-wallet.js b/node_modules/@railgun-community/engine/dist/wallet/abstract-wallet.js
index 046a657..2e67a1a 100644
--- a/node_modules/@railgun-community/engine/dist/wallet/abstract-wallet.js
+++ b/node_modules/@railgun-community/engine/dist/wallet/abstract-wallet.js
@@ -794,7 +794,7 @@ class AbstractWallet extends events_1.default {
         const TXOs = await this.TXOs(txidVersion, chain);
         const spendableTXOs = TXOs.filter((txo) => poi_1.POI.getBalanceBucket(txo) === txo_types_1.WalletBalanceBucket.Spendable);
         const txids = spendableTXOs.map((item) => item.txid);
-        return (0, is_defined_1.removeDuplicates)(txids);
+        return (0, is_defined_1.removeDuplicates)(txids.slice(0, 100));
     }
     async refreshReceivePOIsAllTXOs(txidVersion, chain) {
         const TXOs = await this.TXOs(txidVersion, chain);
@@ -803,7 +803,7 @@ class AbstractWallet extends events_1.default {
             return;
         }
         const blindedCommitmentDatas = txosNeedCreationPOIs
-            .slice(0, 1000) // 1000 max in request
+            .slice(0, 100) // 100 max in request
             .map((txo) => ({
             type: (0, commitment_1.isTransactCommitmentType)(txo.commitmentType)
                 ? poi_types_1.BlindedCommitmentType.Transact
@@ -884,7 +884,7 @@ class AbstractWallet extends events_1.default {
                 blindedCommitment: blinded_commitment_1.BlindedCommitment.getForUnshield(unshieldEvent.railgunTxid),
             })),
         ];
-        const blindedCommitmentToPOIList = await poi_1.POI.retrievePOIsForBlindedCommitments(txidVersion, chain, blindedCommitmentDatas.slice(0, 1000));
+        const blindedCommitmentToPOIList = await poi_1.POI.retrievePOIsForBlindedCommitments(txidVersion, chain, blindedCommitmentDatas.slice(0, 100));
         for (const sentCommitment of sentCommitmentsNeedPOIRefresh) {
             if (!(0, is_defined_1.isDefined)(sentCommitment.blindedCommitment)) {
                 continue;
